# -*- coding: utf-8 -*-
import random


def sort_by_quick(array: list) -> list:
    """
    Быстрая сортировка Хоара.
    Суть: Разделение массива на две части производится следующим образом. Устанавливаем один курсор на левую границу
    массива, а второй – на правую границу. Затем осуществляем перемещение курсоров навстречу друг другу до тех пор,
    пока они не пересекутся. При перемещении курсоров сравниваем значения текущих элементов со «средним». Находим левый
    текущий элемент, больший «среднего», и правый текущий элемент, меньший «среднего» (т. е. элементы, которые
    находятся «не на своем месте»). Осуществляем обмен этих элементов.

    Максимальная временная сложность: О(n^2)
    Средняя временная сложность: О(n*log n)
    Минимальная временная сложность: О(n*log n)

    Пространственная сложность: О(n)

    (*) Алгоритм НЕ устойчивой сортировки.

    :param array: исходный массив
    :return array: упорядоченный исходный массив
    """
    if len(array) <= 1:
        return array
    else:
        q = random.choice(array)
        L = []
        M = []
        R = []
        for elem in array:
            if elem < q:
                L.append(elem)
            elif elem > q:
                R.append(elem)
            else:
                M.append(elem)
        return sort_by_quick(L) + M + sort_by_quick(R)
